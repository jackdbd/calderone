steps:
  # INSTALL / CONFIGURE ########################################################
  - id: 'Debug Cloud Build substitutions'
    name: 'ubuntu'
    # https://cloud.google.com/build/docs/configuring-builds/substitute-variable-values
    args: ['echo', 'Node.js version: ${_NODE_VERSION} === Cloud Build Trigger: ${TRIGGER_NAME}']

  # - id: '‚ú® Clean npm cache'
  #   name: 'docker.io/library/node:${_NODE_VERSION}'
  #   entrypoint: npm
  #   args: ['cache', 'clean', '--force']

  # - id: 'üîë Refresh Artifact Registry access token'
  #   name: 'docker.io/library/node:${_NODE_VERSION}'
  #   entrypoint: npx
  #   args: ['google-artifactregistry-auth', '--repo-config=./config/repo-config-npmrc-artifact-registry']

  - id: '‚¨áÔ∏è Install dependencies'
    name: 'docker.io/library/node:${_NODE_VERSION}'
    entrypoint: npm
    args: ['ci']

  # - id: '‚¨áÔ∏è Install zx'
  #   name: 'docker.io/library/node:${_NODE_VERSION}'
  #   entrypoint: npm
  #   args: ['install', '-g', 'zx']

  # - id: 'Check zx version'
  #   name: 'docker.io/library/node:${_NODE_VERSION}'
  #   entrypoint: npx
  #   args: ['zx', '--version']

  # AUDIT ######################################################################
  - id: 'üõ°Ô∏è Audit dependencies'
    name: 'docker.io/library/node:${_NODE_VERSION}'
    entrypoint: npm
    # https://docs.npmjs.com/cli/v8/commands/npm-audit#audit-level
    args: ['audit', '--audit-level=high']

  # BUILD ######################################################################
  # - id: 'üîß Build all libraries'
  #   name: 'docker.io/library/node:${_NODE_VERSION}'
  #   entrypoint: npm
  #   args: ['run', 'build:libs']

  # - id: 'üîß Build library @jackdbd/telegram-text-messages'
  #   name: 'docker.io/library/node:${_NODE_VERSION}'
  #   entrypoint: npm
  #   args: ['run', 'build:ts', '-w=packages/telegram-text-messages']

  # - id: 'üîß Build all scripts'
  #   name: 'docker.io/library/node:${_NODE_VERSION}'
  #   entrypoint: npm
  #   args: ['run', 'build:scripts']

  # TEST #######################################################################
  # - id: 'üîç Test library checks'
  #   name: 'docker.io/library/node:${_NODE_VERSION}'
  #   entrypoint: npm
  #   args: ['run', 'test:ci', '-w=packages/checks']

  # - id: 'üîç Test library plausible-client'
  #   name: 'docker.io/library/node:${_NODE_VERSION}'
  #   entrypoint: npm
  #   args: ['run', 'test:ci', '-w=packages/plausible-client']
  #   secretEnv: ['PLAUSIBLE']

  # - id: 'üîç Test library @jackdbd/telegram-text-messages'
  #   name: 'docker.io/library/node:${_NODE_VERSION}'
  #   entrypoint: npm
  #   args: ['run', 'test:ci', '-w=packages/telegram-text-messages']
  #   secretEnv: ['TELEGRAM']

  # - id: 'üîç Test library utils'
  #   name: 'docker.io/library/node:${_NODE_VERSION}'
  #   entrypoint: npm
  #   args: ['run', 'test:ci', '-w=packages/utils']
  #   env:
  #     - 'BUILD_ID=$BUILD_ID'
  #     - 'LOCATION=$LOCATION'
  #     - 'PROJECT_ID=$PROJECT_ID'
  #     - 'PROJECT_NUMBER=$PROJECT_NUMBER'

  # RELEASE #######################################################################
  - id: 'Release to npmjs'
    name: 'docker.io/library/node:${_NODE_VERSION}'
    entrypoint: npm
    env:
      - 'BUILD_ID=$BUILD_ID'
      - 'LOCATION=$LOCATION'
      - 'PROJECT_ID=$PROJECT_ID'
      - 'PROJECT_NUMBER=$PROJECT_NUMBER'
    secretEnv: ['NPM_ACCESS_TOKENS']
    args: ['run', 'publish:npm']

availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/NPM_ACCESS_TOKENS/versions/latest
    env: 'NPM_ACCESS_TOKENS'
  # - versionName: projects/${PROJECT_ID}/secrets/PLAUSIBLE/versions/latest
  #   env: 'PLAUSIBLE'
  # - versionName: projects/${PROJECT_ID}/secrets/TELEGRAM/versions/latest
  #   env: 'TELEGRAM'

# user-defined substitutions and default values
# https://cloud.google.com/build/docs/configuring-builds/substitute-variable-values#using_user-defined_substitutions
substitutions:
  # use the latest Node.js LTS version as the default one
  _NODE_VERSION: '16.15.1'
options:
  dynamic_substitutions: true