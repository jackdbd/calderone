name: 'CI'

on:
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    branches:
      - main
      - 'releases/*'
    paths-ignore:
      - '**.md'

jobs:
  build-and-test:
    name: 🔧 Build all packages [${{ matrix.os }}, Node ${{ matrix.node }}]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: ['17.9.0']
    steps:
      - name: 🛎️ Checkout repo
        uses: actions/checkout@v3
      - name: 🖥️ Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: 👨‍💻 Install root package dependencies
        run: npm ci
      - name: 🔧 Build all libraries
        run: npm run build
      - name: 🔧 Build audit app
        run: npm run clean -w packages/audit && npm run build -w packages/audit
      - name: 🔧 Build telegram-bot app
        run: npm run clean -w packages/telegram-bot && npm run build -w packages/telegram-bot
      - name: 🔧 Build wasm-news app
        run: npm run clean -w packages/wasm-news && npm run build -w packages/wasm-news
      - name: 🔧 Build webhooks app
        run: npm run clean -w packages/webhooks && npm run build -w packages/webhooks
      - name: 🛡️ Audit security
        continue-on-error: true
        if: ${{ matrix.os }} == 'ubuntu-latest'
        run: npm audit --audit-level=moderate
      - name: 🔍 Test packages
        run: npm run test:ci
      - name: ⬆️ Upload all coverage reports to CodeCov
        continue-on-error: true
        run: codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  release:
    name: 📣 Release
    needs: [build-and-test]
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout repo
        uses: actions/checkout@v3
      - name: 🖥️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '17.9.0'
      - name: 👨‍💻 Install root package dependencies
        run: npm ci
      - name: 🔧 Build all packages
        run: npm run build
      - name: 🌳 Debug filesystem with tree
        run: tree -L 4 -I 'node_modules|__tests__'
      - name: 🚀 Release with multi-semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run release
