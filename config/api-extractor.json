/**
 * Config file for API Extractor.
 * https://api-extractor.com
 */
{
  "$schema": "https://developer.microsoft.com/json-schemas/api-extractor/v7/api-extractor.schema.json",

  /**
   * Configures how the API report file (*.api.md) will be generated.
   *
   * The API report file SHOULD be tracked by Git. Changes to it can be used
   * to trigger a branch policy, e.g. for an API review.
   * https://api-extractor.com/pages/configs/api-extractor_json/#api-report-section
   */
  "apiReport": {
    "enabled": true,
    "reportFolder": "<projectFolder>/.ae/",
    "reportTempFolder": "<projectFolder>/.ae/temp/"
  },

  /**
   * A list of NPM package names whose exports should be treated as part of this package.
   *
   * This would direct API Extractor to embed those types directly in the .d.ts
   * rollup, as if they had been local files for library1.
   */
  "bundledPackages": [],

  /**
   * Determines how the TypeScript compiler engine will be invoked by API Extractor.
   */
  "compiler": {},

  /**
   * Configures how the doc model file (*.api.json) will be generated.
   *
   * I think the generated JSON file SHOULD NOT be tracked by Git.
   * https://api-extractor.com/pages/configs/api-extractor_json/#doc-model-section
   */
  "docModel": {
    "enabled": true,
    "apiJsonFilePath": "<projectFolder>/.ae/doc/<unscopedPackageName>.api.json"
  },

  /**
   * Configures how the .d.ts rollup file will be generated.
   *
   * This file will include all declarations that are exported by the main entry
   * point.
   */
  "dtsRollup": {
    "enabled": true,
    "untrimmedFilePath": "<projectFolder>/lib/<unscopedPackageName>.d.ts"
  },

  /**
   * Specifies the .d.ts file to be used as the starting point for analysis.
   * API Extractor analyzes the symbols exported by this module.
   */
  "mainEntryPointFilePath": "<projectFolder>/lib/index.d.ts",

  /**
   * Configures how API Extractor reports error and warning messages produced
   * during analysis.
   *
   * There are three sources of messages: compiler messages, API Extractor
   * messages, and TSDoc messages.
   */
  "messages": {
    "compilerMessageReporting": {
      "default": {
        "logLevel": "warning"
      }
    },
    "extractorMessageReporting": {
      "default": {
        "logLevel": "warning",
        "addToApiReportFile": true
      }
    },
    "tsdocMessageReporting": {
      "default": {
        "logLevel": "warning"
      }
    }
  },

  /**
   * Configures how the tsdoc-metadata.json file will be generated.
   */
  "tsdocMetadata": {
    "tsdocMetadataFilePath": "<projectFolder>/.ae/tsdoc-metadata.json"
  }
}
